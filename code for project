import java.awt.*;
import java.awt.event.*;
public class QuizApp extends Frame implements ActionListener {
// Question, options, and correct answer.
String[] questions = {
"What is the capital of France?",
"Which planet is known as the Red Planet?",
"Who wrote 'Romeo and Juliet'?"
};
String[][] options = {
{"Berlin", "Madrid", "Paris", "Rome"},
{"Earth", "Mars", "Jupiter", "Saturn"},
{"Shakespeare", "Dickens", "Hemingway", "Austen"}
};
int[] answers = {2, 1, 0}; // Correct answers' indexes (0-based)
int currentQuestion = 0;
int score = 0;
// UI components
Label questionLabel;
CheckboxGroup optionGroup;
Checkbox option1, option2, option3, option4;
Button nextButton;
Label scoreLabel;
Label feedbackLabel; // Label for feedback

14

public QuizApp() {
setTitle("Quiz Application");
setSize(400, 350); // Increased size for feedback message
setLayout(new FlowLayout());
questionLabel = new Label(questions[currentQuestion]);
add(questionLabel);
optionGroup = new CheckboxGroup();
option1 = new Checkbox(options[currentQuestion][0], optionGroup, false);
option2 = new Checkbox(options[currentQuestion][1], optionGroup, false);
option3 = new Checkbox(options[currentQuestion][2], optionGroup, false);
option4 = new Checkbox(options[currentQuestion][3], optionGroup, false)
add(option1);
add(option2);
add(option3);
add(option4);
nextButton = new Button("Next");
nextButton.addActionListener(this);
add(nextButton);
scoreLabel = new Label("Score: 0");
add(scoreLabel);
feedbackLabel = new Label(""); // Initial empty feedback
add(feedbackLabel);
setVisible(true);
}
@Override
public void actionPerformed(ActionEvent e) {
// Check the answer and update the score
int selectedOption = -1;

15

if (option1.getState()) {
selectedOption = 0;
} else if (option2.getState()) {
selectedOption = 1;
} else if (option3.getState()) {
selectedOption = 2;
} else if (option4.getState()) {
selectedOption = 3;
}
// Check the selected answer
if (selectedOption == answers[currentQuestion]) {
score++;
}
// Update the score
scoreLabel.setText("Score: " + score);
// Go to the next question
currentQuestion++;
// If there are more questions, update the question and options
if (currentQuestion < questions.length) {
questionLabel.setText(questions[currentQuestion]);
option1.setLabel(options[currentQuestion][0]);
option2.setLabel(options[currentQuestion][1]);
option3.setLabel(options[currentQuestion][2]);
option4.setLabel(options[currentQuestion][3]);
// Clear previous selection
optionGroup.setSelectedCheckbox(null);
} else {
// End of quiz, show feedback
nextButton.setEnabled(false);

16
questionLabel.setText("Quiz Finished!");
scoreLabel.setText("Final Score: " + score);
feedbackLabel.setText(getFeedback(score));
}
}

// Method to generate feedback based on the score
private String getFeedback(int score) {
if (score == 3) {
return "Excellent! You got all answers correct.";
} else if (score == 2) {
return "Good job! You got 2 out of 3 correct.";
} else if (score == 1) {
return "Needs improvement. You got 1 out of 3 correct.";
} else {
return "Better luck next time! You got 0 out of 3 correct.";
}
}

public static void main(String[] args) {
new QuizApp();
}
}
